plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
	id "org.openapi.generator" version "7.2.0"
	id 'jacoco'
}

ext {
    openApiOutputDir = "$rootDir/build/generated/openapi"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

sourceSets.main.java.srcDirs += ["$openApiOutputDir/src/main/java"]

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation
	implementation 'org.springframework.boot:spring-boot-starter-validation:3.2.1'
	// // https://mvnrepository.com/artifact/javax.validation/validation-api
	// implementation 'javax.validation:validation-api:2.0.1.Final'
	// // https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api
	// implementation 'javax.annotation:javax.annotation-api:1.3.2'
	// https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api
	compileOnly 'javax.servlet:javax.servlet-api:4.0.1'
	// https://mvnrepository.com/artifact/io.swagger.core.v3/swagger-annotations
	compileOnly 'io.swagger.core.v3:swagger-annotations:2.2.20'
	compileOnly 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'	
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-devtools
	developmentOnly 'org.springframework.boot:spring-boot-devtools:3.2.1'
	// https://mvnrepository.com/artifact/com.h2database/h2
	// https://mvnrepository.com/artifact/org.openapitools/jackson-databind-nullable
	implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
    implementation(platform("software.amazon.awssdk:bom:2.23.4"))
    implementation("software.amazon.awssdk:dynamodb-enhanced")	

	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

task buildSpringApi(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
    generatorName.set("spring")
    inputSpec.set("$rootDir/src/main/resources/api-schema.yml")
    outputDir.set("$openApiOutputDir")
    apiPackage.set("com.example.demo.controller")
    modelPackage.set("com.example.demo.model")
    configOptions.set([
		interfaceOnly: "true",
		useSpringBoot3: "true"
    ])
}

compileJava.dependsOn tasks.buildSpringApi

test.finalizedBy jacocoTestReport

def coverageExcludeFiles = [
	'**/*$*.class',
	'**/*$lambda$*.class',
]

jacocoTestReport {
    reports {
        html.required = true
		xml.required = true
    }
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(
                    dir: it,
                    exclude: coverageExcludeFiles)
        })
    }
}